#include <string>
#include <iostream>

class kek
{
private:
  std::string klmn;
public:
  kek();
  void setKek(std::string str);
  void getKek(void);
  const std::string &getKekRef(void);
  ~kek();
};

class lol
{
private:
  kek test;
public:
  lol();
  void setLol(std::string str);
  void getLol(void);
  const std::string &setLolRef(void);
  ~lol();
};

lol::lol()
{
}

lol::~lol()
{}

void lol::setLol(std::string str)
{
  test.setKek(str);
}

void lol::getLol(void)
{
  test.getKek();
}

const std::string &lol::setLolRef(void)
{
  const std::string &temp = test.getKekRef();
  //std::cout << "Value is --" << test.getKekRef() << "--" << std::endl;
  return (temp);
}
kek::kek()
{}

kek::~kek()
{}

void kek::setKek(std::string str)
{
  klmn = str;
}

void kek::getKek(void)
{
  std::cout << "Kek is --" << klmn << "--" << std::endl;
}

const std::string &kek::getKekRef(void)
{
  const std::string &ref = klmn;

  return (ref);
}

int main(void)
{
  /*kek test;

  test.setKek("mystring");
  test.getKek();
  std::cout << "by ref is --" << test.getKekRef() << "--" << std::endl;
  test.setKek("new string");
  std::cout << "by ref is --" << test.getKekRef() << "--" << std::endl;*/
  lol test;

  test.setLol("value");
  test.getLol();
  test.setLol("another value");
  test.getLol();

  std::cout << "by ref is --" << test.setLolRef() << "--" << std::endl;
  return (0);
}

/*int main(void)
{
  std::string str = "HI THIS IS BRAIN";
  std::string *strPtr;
  std::string &strRef = str;

  strPtr = &str;
  std::cout << "str address is: " << &str << std::endl << "The pointer points to: " << strPtr << std::endl << "The reference points to: " << &strRef << std::endl << std::endl;

  std::cout << "str value is: " << str << std::endl << "The value that the pointer points to is: " << *strPtr << std::endl << "The value that the reference points to is: " << strRef << std::endl;
  return (0);
  }*/

